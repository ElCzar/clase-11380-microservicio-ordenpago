spring:
  application:
    name: demo
  security:
    oauth2:
      resourceserver:
        jwt:
          # Remove issuer-uri to skip issuer validation and allow tokens from any microservice
          # issuer-uri: http://localhost:8180/realms/microservices-ecosystem
          jwk-set-uri: http://localhost:8180/realms/microservices-ecosystem/protocol/openid-connect/certs
  datasource:
    url: jdbc:h2:mem:payment
    driver-class-name: org.h2.Driver
    username: admin
    password: admin123
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  h2:
    console:
      enabled: true
  cloud:
    stream:
      # General Kafka Configuration
      kafka:
        binder:
          brokers: localhost:9093
          auto-create-topics: true
          configuration:
            "[key.serializer]": org.apache.kafka.common.serialization.StringSerializer
            "[value.serializer]": org.springframework.kafka.support.serializer.JsonSerializer
            "[key.deserializer]": org.apache.kafka.common.serialization.StringDeserializer
            "[value.deserializer]": org.springframework.kafka.support.serializer.JsonDeserializer
            "[spring.json.trusted.packages]": "*"
      bindings:
        # Consumer binding for service responses FROM marketplace
        serviceResponse-in-0:
          destination: service-response-topic
          content-type: application/json
          #group: orden-pago-microservice-group
        # Producer binding for service requests TO marketplace
        serviceRequest-out-0:
          destination: service-request-topic
          content-type: application/json

# Keycloak Configuration
keycloak:
  realm: microservices-ecosystem
  auth-server-url: http://localhost:8180
  ssl-required: external
  resource: ordenpago-service
  credentials:
    secret: kuYJVLbl6T0uJX0YYw8jAD9Nt7f48vAf
  use-resource-role-mappings: true
  bearer-only: true


# Kafka Topics Configuration
kafka:
  topics:
    service-request: service-request-topic
    service-response: service-response-topic

# Eureka Client Configuration
# eureka:
#     client:
#         service-url:
#             defaultZone: http://localhost:8761/eureka/
#         register-with-eureka: true
#     instance:
#         prefer-ip-address: true


management:
  endpoints:
    web:
      exposure:
        # Exposes monitoring for every endpoint
        # through /actuator/metrics
        include: "*"

  endpoint:
    health:
      # /actuator/health
      show-details: always

  info:
    env:
      enabled: true

server:
    port: 8084

# Configuración para simulación de pagos
payment:
  simulation:
    enabled: true
    success-rate: 0.85
    min-delay: 2000
    max-delay: 5000

