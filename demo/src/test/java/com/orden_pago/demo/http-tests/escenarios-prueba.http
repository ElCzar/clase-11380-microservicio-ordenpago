### Pruebas con escenarios completos - Orden de Pago
### Puerto: 8084

### Login with Basic User
# @name loginUser
POST http://localhost:8081/auth/login
Content-Type: application/json

{
  "username": "testuser",
  "password": "password123"
}

###

# Variables de entorno
@baseUrl = http://localhost:8084
@authToken = Bearer {{loginUser.response.body.accessToken}}

#########################################################################
# Paso 1: CRUD de carro
#########################################################################

### Revisar los servicios disponibles
GET {{baseUrl}}/api/cart/items/available
Authorization: {{authToken}}
Content-Type: application/json

###

# Variable de item
@itemId = 174306ef-6ebc-47fb-a900-1a4755ddd0d3

### Crear un item en el carro con un servicio específico
POST {{baseUrl}}/api/cart/items
Authorization: {{authToken}}
Content-Type: application/json

{
  "serviceId": "174306ef-6ebc-47fb-a900-1a4755ddd0d3",
  "quantity": 1
}

###

### Cambiar el mismo servicio con diferente cantidad para probar el comportamiento
PUT {{baseUrl}}/api/cart/items/aa8fad7c-9897-47d9-bcb3-122db2f6be18
Authorization: {{authToken}}
Content-Type: application/json

{
  "quantity": 2
}
###

### Verificar contenido del carrito nuevamente
GET {{baseUrl}}/api/cart
Authorization: {{authToken}}
Content-Type: application/json

###

### Eliminar un item del carro
DELETE {{baseUrl}}/api/cart/items/aa8fad7c-9897-47d9-bcb3-122db2f6be18
Authorization: {{authToken}}
Content-Type: application/json

###

### Historial de carritos
GET {{baseUrl}}/api/cart/history
Authorization: {{authToken}}
Content-Type: application/json

###

### Añadir otro servicio que no existe (debería fallar)
POST {{baseUrl}}/api/cart/items
Authorization: {{authToken}}
Content-Type: application/json

{
  "serviceId": "00000000-0000-0000-0000-000000000000",
  "quantity": 1
}

###

### 
GET {{baseUrl}}/api/cart
Authorization: {{authToken}}
Content-Type: application/json

###

#########################################################################
# ESCENARIO 5: Pagos
#########################################################################

### Procesar pago
POST {{baseUrl}}/api/cart/checkout
Authorization: {{authToken}}
Content-Type: application/json

{
  "method": "CREDIT_CARD",
  "cardNumber": "4532123456789012",
  "cardHolderName": "Kafka Test User",
  "expiryMonth": "12",
  "expiryYear": "2028",
  "cvv": "123"
}

###